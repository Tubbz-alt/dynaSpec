flim <- c(0, wave@samp.rate / 2000)
# reset margins at the end
opar <- par
on.exit(par(opar), add = TRUE)
# remove temporary files at the end
on.exit(try(unlink(c(temp.video, temp.audio, list.files(path = tempdir(), full.names = TRUE, pattern = "\\.temp.img.tiff$"))), silent = TRUE), add = TRUE)
on.exit(try(unlink(c(file.path(path = tempdir(), "temp.full.spectro.png"), file.path(path = tempdir(), "temp.full.oscillo.png"))), silent = TRUE), add = TRUE)
# set plot margins for spectrogram
par(mar = rep(0, 4))
spectro.call$wave <- wave_sil
!is.null(spectro.call$X)
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
scrolling_spectro(wave = hs_wren, wl = 512,
t.display = 1.2, pal = reverse.gray.colors.1,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 500, height = 250, res = 60,
collevels = seq(-100, 0, 5),
spectro.call = sp_cl, fps = 10, file.name = "../yellow_and_green.mp4", annotate.call = ann_cl)
# evaluate call
eval(spectro.call)
!is.null(annotate.call)
# evaluate call
eval(annotate.call)
flim
annotate.call
ann.fun()
ann.fun
par("usr")
# highlight selections
ann.fun <- function(wave){
# color.spectro(wave = wave, wl = 200, ovlp = 95, flim = c(1, 16.6),
#               collevels = seq(-55, 0, 5), dB = "B", X = st, col.clm = "colors",
#               base.col = "black",  t.mar = 0.07, f.mar = 0.1, strength = 3,
#               interactive = NULL, bg.col = "black")
#
# text(x = 1.3, y = 14.2, labels = "male", cex = 3, col = "#FFFFFFB3")
lines(x = c(0.4, 2.3), y = c(13, 13), lwd = 2, col = "#FFFFFFB3")
text(x = 3.1, y = 10.2, labels = "female", cex = 3, col = "#FFFFFFB3")
lines(x = c(2.4, 3.8), y = c(9, 9), lwd = 2, col = "#FFFFFFB3")
}
ann_cl <- call("ann.fun")
eval(ann_cl)
# color.spectro(wave = wave, wl = 200, ovlp = 95, flim = c(1, 16.6),
#               collevels = seq(-55, 0, 5), dB = "B", X = st, col.clm = "colors",
#               base.col = "black",  t.mar = 0.07, f.mar = 0.1, strength = 3,
#               interactive = NULL, bg.col = "black")
#
text(x = 1.3, y = 10.2, labels = "male", cex = 3, col = "#FFFFFFB3")
lines(x = c(0.4, 2.3), y = c(9, 9), lwd = 2, col = "#FFFFFFB3")
# highlight selections
ann.fun <- function(wave){
# color.spectro(wave = wave, wl = 200, ovlp = 95, flim = c(1, 16.6),
#               collevels = seq(-55, 0, 5), dB = "B", X = st, col.clm = "colors",
#               base.col = "black",  t.mar = 0.07, f.mar = 0.1, strength = 3,
#               interactive = NULL, bg.col = "black")
#
text(x = 1.3, y = 10.2, labels = "male", cex = 3, col = "#FFFFFFB3")
lines(x = c(0.4, 2.3), y = c(9, 9), lwd = 2, col = "#FFFFFFB3")
text(x = 3.1, y = 10.2, labels = "female", cex = 3, col = "#FFFFFFB3")
lines(x = c(2.4, 3.8), y = c(9, 9), lwd = 2, col = "#FFFFFFB3")
}
ann_cl <- call("ann.fun")
scrolling_spectro(wave = hs_wren, wl = 512,
t.display = 1.2, pal = reverse.gray.colors.1,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 500, height = 250, res = 60,
collevels = seq(-100, 0, 5),
spectro.call = sp_cl, fps = 10, file.name = "../yellow_and_green.mp4", annotate.call = ann_cl)
scrolling_spectro(wave = hs_wren, wl = 512,
t.display = 1.2, pal = reverse.gray.colors.1,
grid = FALSE, flim = c(1, 10), loop = 3,
width = 500, height = 250, res = 60,
collevels = seq(-100, 0, 5),
spectro.call = sp_cl, fps = 10, file.name = "../yellow_and_green.mp4", annotate.call = ann_cl)
X
X <- st
X
X$end[1]
# create color column
st$colors <- c("green", "yellow")
st$labels <- c("male", "female")
# highlight selections
ann.fun <- function(wave, X){
color.spectro(wave = wave, wl = 200, ovlp = 95, flim = c(1, 16.6),
collevels = seq(-55, 0, 5), dB = "B", X = st, col.clm = "colors",
base.col = "black",  t.mar = 0.07, f.mar = 0.1, strength = 3,
interactive = NULL, bg.col = "black")
for(i in 1:nrow(X)){
text(x = X$start[i] + ((X$start[i] - X$end[i]) / 2), y = 14.2, labels = X$labels[i], cex = 3, col = adjustcolor(X$colors[i], 0.7))
lines(x = c(X$start[i], X$end[i]), y = c(13, 13), lwd = 2, col = adjustcolor(X$colors[i], 0.7))
}
}
ann_cl <- call("ann.fun")
eval(ann_cl)
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
dev.off()
eval(ann_cl)
scrolling_spectro(wave = hs_wren, wl = 512,
t.display = 1.2, pal = reverse.gray.colors.1,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 500, height = 250, res = 60,
collevels = seq(-100, 0, 5),
spectro.call = sp_cl, fps = 10, file.name = "../yellow_and_green.mp4", annotate.call = ann_cl)
# highlight selections
ann.fun <- function(wave, X){
color.spectro(wave = wave, wl = 200, ovlp = 95, flim = c(1, 16.6),
collevels = seq(-55, 0, 5), dB = "B", X = st, col.clm = "colors",
base.col = "black",  t.mar = 0.07, f.mar = 0.1, strength = 3,
interactive = NULL, bg.col = "black")
for(i in 1:nrow(X)){
text(x = X$start[i] + ((X$start[i] - X$end[i]) / 2), y = 14.2, labels = X$labels[i], cex = 3, col = adjustcolor(X$colors[i], 0.7))
lines(x = c(X$start[i], X$end[i]), y = c(13, 13), lwd = 2, col = adjustcolor(X$colors[i], 0.7))
}
}
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
# highlight selections
ann.fun <- function(wave, X){
color.spectro(wave = wave, wl = 200, ovlp = 95, flim = c(1, 16.6),
collevels = seq(-55, 0, 5), dB = "B", X = st, col.clm = "colors",
base.col = "black",  t.mar = 0.07, f.mar = 0.1, strength = 3,
interactive = NULL, bg.col = "black")
for(e in 1:nrow(X)){
text(x = X$start[e] + ((X$start[e] - X$end[e]) / 2), y = 14.2, labels = X$labels[e], cex = 3, col = adjustcolor(X$colors[e], 0.7))
lines(x = c(X$start[e], X$end[e]), y = c(13, 13), lwd = 2, col = adjustcolor(X$colors[e], 0.7))
}
}
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
# highlight selections
ann.fun <- function(wave, X){
color.spectro(wave = wave, wl = 200, ovlp = 95, flim = c(1, 16.6),
collevels = seq(-55, 0, 5), dB = "B", X = st, col.clm = "colors",
base.col = "black",  t.mar = 0.07, f.mar = 0.1, strength = 3,
interactive = NULL, bg.col = "black")
for(e in 1:nrow(X)){
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.2, labels = X$labels[e], cex = 3, col = adjustcolor(X$colors[e], 0.7))
lines(x = c(X$start[e], X$end[e]), y = c(13, 13), lwd = 2, col = adjustcolor(X$colors[e], 0.7))
}
}
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
# highlight selections
ann.fun <- function(wave, X){
color.spectro(wave = wave, wl = 200, ovlp = 95, flim = c(1, 16.6),
collevels = seq(-55, 0, 5), dB = "B", X = st, col.clm = "colors",
base.col = "black",  t.mar = 0.07, f.mar = 0.1, strength = 3,
interactive = NULL, bg.col = "black")
for(e in 1:nrow(X)){
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.2, labels = X$labels[e], cex = 3, col = adjustcolor(X$colors[e], 0.6))
lines(x = c(X$start[e], X$end[e]), y = c(13, 13), lwd = 2, col = adjustcolor(X$colors[e], 0.6))
}
}
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
scrolling_spectro(wave = hs_wren, wl = 512,
t.display = 1.2, pal = reverse.gray.colors.1,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 500, height = 250, res = 60,
collevels = seq(-100, 0, 5),
spectro.call = sp_cl, fps = 10, file.name = "../yellow_and_green.mp4", annotate.call = ann_cl)
# highlight selections
ann.fun <- function(wave, X){
color.spectro(wave = wave, wl = 200, ovlp = 95, flim = c(1, 16.6),
collevels = seq(-55, 0, 5), dB = "B", X = st, col.clm = "colors",
base.col = "black",  t.mar = 0.07, f.mar = 0.1, strength = 3,
interactive = NULL, bg.col = "black")
for(e in 1:nrow(X)){
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.2, labels = X$labels[e], cex = 3.3, col = adjustcolor(X$colors[e], 0.6))
lines(x = c(X$start[e], X$end[e]), y = c(13, 13), lwd = 2, col = adjustcolor(X$colors[e], 0.6))
}
}
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
# highlight selections
ann.fun <- function(wave, X){
color.spectro(wave = wave, wl = 200, ovlp = 95, flim = c(1, 16.6),
collevels = seq(-55, 0, 5), dB = "B", X = st, col.clm = "colors",
base.col = "black",  t.mar = 0.07, f.mar = 0.1, strength = 3,
interactive = NULL, bg.col = "black")
for(e in 1:nrow(X)){
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.2, labels = X$labels[e], cex = 3.3, col = adjustcolor(X$colors[e], 0.6))
lines(x = c(X$start[e], X$end[e]), y = c(13.5, 13.5), lwd = 2, col = adjustcolor(X$colors[e], 0.6))
}
}
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.7, labels = X$labels[e], cex = 3.3, col = adjustcolor(X$colors[e], 0.6))
# highlight selections
ann.fun <- function(wave, X){
color.spectro(wave = wave, wl = 200, ovlp = 95, flim = c(1, 16.6),
collevels = seq(-55, 0, 5), dB = "B", X = st, col.clm = "colors",
base.col = "black",  t.mar = 0.07, f.mar = 0.1, strength = 3,
interactive = NULL, bg.col = "black")
for(e in 1:nrow(X)){
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.7, labels = X$labels[e], cex = 3.3, col = adjustcolor(X$colors[e], 0.6))
lines(x = c(X$start[e], X$end[e]), y = c(13.5, 13.5), lwd = 2, col = adjustcolor(X$colors[e], 0.6))
}
}
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
scrolling_spectro(wave = hs_wren, wl = 512,
t.display = 1.2, pal = reverse.gray.colors.1,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 500, height = 250, res = 60,
collevels = seq(-100, 0, 5),
spectro.call = sp_cl, fps = 10, file.name = "../yellow_and_green.mp4", annotate.call = ann_cl)
# create color column
st$colors <- viridis(10)[c(3, 8)]
# create color column
st$colors <- viridis(10)[c(3, 8)]
st$labels <- c("male", "female")
# highlight selections
ann.fun <- function(wave, X){
color.spectro(wave = wave,  wl = 200,
ovlp = 95, flim = c(1, 16.6), collevels = seq(-55, 0, 5),
dB = "B", X = st, col.clm = "colors",
base.col = "white", t.mar = 0.07, f.mar = 0.1,
strength = 3, interactive = NULL)
for(e in 1:nrow(X)){
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.7, labels = X$labels[e], cex = 3.3, col = adjustcolor(X$colors[e], 0.6))
lines(x = c(X$start[e], X$end[e]), y = c(13.5, 13.5), lwd = 2, col = adjustcolor(X$colors[e], 0.6))
}
}
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
scrolling_spectro(wave = hs_wren, wl = 512,
t.display = 1.2, pal = reverse.gray.colors.1,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 500, height = 250, res = 60,
collevels = seq(-100, 0, 5),
spectro.call = sp_cl, fps = 10, file.name = "../yellow_and_green.mp4", annotate.call = ann_cl)
scrolling_spectro(wave = hs_wren, wl = 512,
t.display = 1.2, pal = reverse.gray.colors.1,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 500, height = 250, res = 60,
collevels = seq(-100, 0, 5),
spectro.call = ann_cl, fps = 10, file.name = "../viridis_annotated.mp4", annotate.call = ann_cl)
# highlight selections
ann.fun <- function(wave, X){
color.spectro(wave = wave,  wl = 200,
ovlp = 95, flim = c(1, 16.6), collevels = seq(-55, 0, 5),
dB = "B", X = st, col.clm = "colors",
base.col = "white", t.mar = 0.07, f.mar = 0.1,
strength = 3, interactive = NULL)
for(e in 1:nrow(X)){
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.7, labels = X$labels[e], cex = 3.3, col = adjustcolor("gray50", 0.6))
lines(x = c(X$start[e], X$end[e]), y = c(13.5, 13.5), lwd = 2, col = adjustcolor("gray50", 0.6))
}
}
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
# highlight selections
ann.fun <- function(wave, X){
color.spectro(wave = wave,  wl = 200,
ovlp = 95, flim = c(1, 16.6), collevels = seq(-55, 0, 5),
dB = "B", X = st, col.clm = "colors",
base.col = "white", t.mar = 0.07, f.mar = 0.1,
strength = 3, interactive = NULL)
for(e in 1:nrow(X)){
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.9, labels = X$labels[e], cex = 3.3, col = adjustcolor("gray50", 0.6))
lines(x = c(X$start[e], X$end[e]), y = c(13.4, 13.4), lwd = 3, col = adjustcolor("gray50", 0.4))
}
}
ann_cl <- call("ann.fun", wave = hs_wren, X = st)
eval(ann_cl)
scrolling_spectro(wave = hs_wren, wl = 512,
t.display = 1.2, pal = reverse.gray.colors.1,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 500, height = 250, res = 60,
collevels = seq(-100, 0, 5),
spectro.call = ann_cl, fps = 10, file.name = "../viridis_annotated.mp4", annotate.call = ann_cl)
# create color column
st$colors <- viridis(10)[c(3, 8)]
# create label column
st$labels <- c("male", "female")
# function to highlight selections
ann.fun <- function(wave, X){
# print spectrogram
color.spectro(wave = wave,  wl = 200,
ovlp = 95, flim = c(1, 16.6), collevels = seq(-55, 0, 5),
dB = "B", X = st, col.clm = "colors",
base.col = "white", t.mar = 0.07, f.mar = 0.1,
strength = 3, interactive = NULL)
# annotate each selection in X
for(e in 1:nrow(X)){
# label
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.9, labels = X$labels[e], cex = 3.3, col = adjustcolor("gray50", 0.6))
# line
lines(x = c(X$start[e], X$end[e]), y = c(13.4, 13.4), lwd = 3, col = adjustcolor("gray50", 0.4))
}
}
# create annotated dynamic spectrogram
scrolling_spectro(wave = hs_wren, wl = 200, t.display = 1.2,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 1000, height = 500, res = 200,
collevels = seq(-100, 0, 1),
spectro.call = sp_cl, fps = 60,
file.name = "../viridis_annotated.mp4")
# save call
ann_cl <- call("ann_fun", wave = hs_wren, X = st)
# create annotated dynamic spectrogram
scrolling_spectro(wave = hs_wren, wl = 200, t.display = 1.2,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 1000, height = 500, res = 200,
collevels = seq(-100, 0, 1),
spectro.call = ann_cl, fps = 60,
file.name = "../viridis_annotated.mp4")
# function to highlight selections
ann_fun <- function(wave, X){
# print spectrogram
color.spectro(wave = wave,  wl = 200,
ovlp = 95, flim = c(1, 16.6), collevels = seq(-55, 0, 5),
dB = "B", X = st, col.clm = "colors",
base.col = "white", t.mar = 0.07, f.mar = 0.1,
strength = 3, interactive = NULL)
# annotate each selection in X
for(e in 1:nrow(X)){
# label
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.9, labels = X$labels[e], cex = 3.3, col = adjustcolor("gray50", 0.6))
# line
lines(x = c(X$start[e], X$end[e]), y = c(13.4, 13.4), lwd = 3, col = adjustcolor("gray50", 0.4))
}
}
# save call
ann_cl <- call("ann_fun", wave = hs_wren, X = st)
# create annotated dynamic spectrogram
scrolling_spectro(wave = hs_wren, wl = 200, t.display = 1.2,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 1000, height = 500, res = 200,
collevels = seq(-100, 0, 1),
spectro.call = ann_cl, fps = 60,
file.name = "../viridis_annotated.mp4")
# function to highlight selections
ann_fun <- function(wave, X){
# print spectrogram
color.spectro(wave = wave,  wl = 200,
ovlp = 95, flim = c(1, 16.6), collevels = seq(-55, 0, 5),
dB = "B", X = X, col.clm = "colors",
base.col = "white", t.mar = 0.07, f.mar = 0.1,
strength = 3, interactive = NULL)
# annotate each selection in X
for(e in 1:nrow(X)){
# label
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.9, labels = X$labels[e], cex = 3.3, col = adjustcolor("gray50", 0.6))
# line
lines(x = c(X$start[e], X$end[e]), y = c(13.4, 13.4), lwd = 3, col = adjustcolor("gray50", 0.4))
}
}
# function to highlight selections
ann_fun <- function(wave, X){
# print spectrogram
color.spectro(wave = wave,  wl = 200,
ovlp = 95, flim = c(1, 16.6), collevels = seq(-55, 0, 5),
dB = "B", X = X, col.clm = "colors",
base.col = "white", t.mar = 0.07, f.mar = 0.1,
strength = 3, interactive = NULL)
# annotate each selection in X
for(e in 1:nrow(X)){
# label
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 14.9, labels = X$labels[e], cex = 3.3, col = adjustcolor(X$colors[e], 0.6))
# line
lines(x = c(X$start[e], X$end[e]), y = c(13.4, 13.4), lwd = 5, col = adjustcolor("gray50", 0.4))
}
}
# save call
ann_cl <- call("ann_fun", wave = hs_wren, X = st)
# create annotated dynamic spectrogram
scrolling_spectro(wave = hs_wren, wl = 200, t.display = 1.2,
grid = FALSE, flim = c(1, 16.6), loop = 3,
width = 1000, height = 500, res = 200,
collevels = seq(-100, 0, 1), speed = 0.5,
spectro.call = ann_cl, fps = 10,
file.name = "../viridis_annotated.mp4")
# function to highlight selections
ann_fun <- function(wave, X){
# print spectrogram
color.spectro(wave = wave,  wl = 200,
ovlp = 95, flim = c(1, 18.6), collevels = seq(-55, 0, 5),
dB = "B", X = X, col.clm = "colors",
base.col = "white", t.mar = 0.07, f.mar = 0.1,
strength = 3, interactive = NULL)
# annotate each selection in X
for(e in 1:nrow(X)){
# label
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 16.5, labels = X$labels[e], cex = 3.3, col = adjustcolor(X$colors[e], 0.6))
# line
lines(x = c(X$start[e], X$end[e]), y = c(15, 15), lwd = 5, col = adjustcolor("gray50", 0.4))
}
}
# save call
ann_cl <- call("ann_fun", wave = hs_wren, X = st)
# create annotated dynamic spectrogram
scrolling_spectro(wave = hs_wren, wl = 200, t.display = 1.2,
grid = FALSE, flim = c(1, 18.6), loop = 3,
width = 1000, height = 500, res = 200,
collevels = seq(-100, 0, 1), speed = 0.5,
spectro.call = ann_cl, fps = 10,
file.name = "../viridis_annotated.mp4")
# function to highlight selections
ann_fun <- function(wave, X){
# print spectrogram
color.spectro(wave = wave,  wl = 200,
ovlp = 95, flim = c(1, 18.6), collevels = seq(-55, 0, 5),
dB = "B", X = X, col.clm = "colors",
base.col = "white", t.mar = 0.07, f.mar = 0.1,
strength = 3, interactive = NULL)
# annotate each selection in X
for(e in 1:nrow(X)){
# label
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 16.5, labels = X$labels[e], cex = 3.3, col = adjustcolor(X$colors[e], 0.6))
# line
lines(x = c(X$start[e], X$end[e]), y = c(14.5, 14.5), lwd = 5, col = adjustcolor("gray50", 0.4))
}
}
# save call
ann_cl <- call("ann_fun", wave = hs_wren, X = st)
# create annotated dynamic spectrogram
scrolling_spectro(wave = hs_wren, wl = 200, t.display = 1.2,
grid = FALSE, flim = c(1, 18.6), loop = 3,
width = 1000, height = 500, res = 200,
collevels = seq(-100, 0, 1), speed = 0.5,
spectro.call = ann_cl, fps = 10,
file.name = "../viridis_annotated.mp4")
st$end
# save call
st$end[2] <- 3.87
# function to highlight selections
ann_fun <- function(wave, X){
# print spectrogram
color.spectro(wave = wave,  wl = 200,
ovlp = 95, flim = c(1, 18.6), collevels = seq(-55, 0, 5),
dB = "B", X = X, col.clm = "colors",
base.col = "white", t.mar = 0.07, f.mar = 0.1,
strength = 3, interactive = NULL)
# annotate each selection in X
for(e in 1:nrow(X)){
# label
text(x = X$start[e] + ((X$end[e] - X$start[e]) / 2), y = 16.5, labels = X$labels[e], cex = 3.3, col = adjustcolor(X$colors[e], 0.6))
# line
lines(x = c(X$start[e], X$end[e]), y = c(14.5, 14.5), lwd = 6, col = adjustcolor("gray50", 0.3))
}
}
# save call
ann_cl <- call("ann_fun", wave = hs_wren, X = st)
# create annotated dynamic spectrogram
scrolling_spectro(wave = hs_wren, wl = 200, t.display = 1.2,
grid = FALSE, flim = c(1, 18.6), loop = 3,
width = 1000, height = 500, res = 200,
collevels = seq(-100, 0, 1), speed = 0.5,
spectro.call = ann_cl, fps = 10,
file.name = "../viridis_annotated.mp4")
# create annotated dynamic spectrogram
scrolling_spectro(wave = hs_wren, wl = 200, t.display = 1.2,
grid = FALSE, flim = c(1, 18.6), loop = 3,
width = 1000, height = 500, res = 200,
collevels = seq(-100, 0, 1), speed = 0.5,
spectro.call = ann_cl, fps = 120,
file.name = "../viridis_annotated.mp4")
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
# check spelling
spch <- devtools::spell_check(".")
spch
# check spelling
spch <- devtools::spell_check(".")
spch
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
# check spelling
spch <- devtools::spell_check(".")
spch
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#built site
pkgdown::build_site(lazy = TRUE)
#sent to github
system("git add .")
system('git commit -m  "added annota"')
rm(list = ls())
x <- c("readxl", "warbleR")
a <- lapply(x, function(y) {
if(!y %in% installed.packages()[,"Package"])  install.packages(y)
require(y, character.only = T)
})
lbhfl <- list.files(path = "../LBH_individual files")
lbhfl <- list.files(path = "../LBH_individual files")
lbhid  <- sapply(strsplit(lbhfl, ".", fixed = T), "[", 1)
out <- lapply(1:length(lbhfl), function(x) {
X <- read.csv(file.path(path = "../LBH_individual files", lbhfl[x]))
X$ID <- lbhid[x]
X$file <- lbhfl[x]
return(X)
})
