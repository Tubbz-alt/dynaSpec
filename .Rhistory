w <- normalize(w, "16")
scrolling_spectro(wave = w, wl = 300, ovlp = 90, speed = 2, fps = 10, t.display = 2, collevels = seq(-40, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 8), width = 1000, height = 800, res = 120, file.name = "fast.mp4", colbg = "black", loop = TRUE, osc = TRUE, colwave = "white", heights = c(5, 1))
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
Sys.unsetenv("GITHUB_PAT")
rm(list = ls())
#
# unload all non-based packages
out <- sapply(paste('package:', names(sessionInfo()$otherPkgs), sep = ""), function(x) try(detach(x, unload = FALSE, character.only = TRUE), silent = T))
x <- c("RColorBrewer", "devtools", "seewave", "maRce10/warbleR", "monitoR", "pkgdown", "ape", "spelling", "ggplot2", "png", "viridis"
#, "maRce10/dynaSpec"
)
out <- lapply(x, function(y) {
# get pakage name
pkg <- strsplit(y, "/")[[1]]
pkg <- pkg[length(pkg)]
# check if installed, if not then install
if (!pkg %in% installed.packages()[,"Package"])  {
if (grepl("/", y))  devtools::install_github(y, force = TRUE) else
install.packages(y)
}
# load package
try(require(pkg, character.only = T), silent = T)
})
#open function in rstudio
open.fun <- function(fun) system(paste("rstudio", file.path("./R", paste0(fun, ".R"))))
# run default arguments in a function
run.def.args <- function(fun = NULL){
#list functions in package
rfiles <- list.files(pattern = ".R", path = "./R", full.names = T)
# select target function file
funfile <- rfiles[gsub(".R", "", basename(rfiles)) == fun]
x <- readLines(funfile, warn = F)
st <- grep('@usage', x, fixed = T)
en <- grep('@param', x, fixed = T)[1]
x <- paste(x[st:(en-1)], collapse = " ")
x <- gsub("usage|\\@|\\#\\'", "", x)
b <- gregexpr(pattern ='\\(|\\)',x)[1][[1]]
x <- substr(x, start = b[1] + 1, stop = b[length(b)] - 1)
spltx <- strsplit(x, "\\,")[[1]]
sl <- vector()
y = 1
while(y <= length(spltx))
{
w <- spltx[y]
z <- 1
if(grepl('\\(', spltx[y]))
{z  <- 0
while(!grepl('\\)', w))
{
z <- z+ 1
w <- paste(w, ",", spltx[y + z], collapse = "")
}
z <- z + 1
}
y = y + z
sl[length(sl) + 1] <- w
}
sl <- sl[sl != "X"]
return(sl)
}
# run it like this:
# for(i in run.def.args("dfts")) try(eval(parse(text = i)), silent = T)
# remove sound files and or image files
rm.sf <- function() unlink(list.files(path = tempdir(), pattern = "\\.wav$", ignore.case = T, full.names = TRUE))
rm.sf.img <- function(mp3 = TRUE) {if(mp3)
unlink(list.files(path = tempdir(), pattern = "\\.wav$|\\.mp3$|\\.tiff$|\\.jpeg$|\\.jpg$|\\.png$", ignore.case = T, full.names = TRUE)) else
unlink(list.files(path = tempdir(), pattern = "\\.wav$|\\.tiff$|\\.jpeg$|\\.jpg$|\\.png$", ignore.case = T, full.names = TRUE))}
rm.img <- function() unlink(list.files(path = tempdir(), pattern = "\\.tiff$|\\.jpeg$|\\.jpg$|\\.png$|\\.pdf$", ignore.case = T, full.names = TRUE))
#open latest image
last.img <- function() system(paste("eog", list.files(path = tempdir(), pattern = "\\.tiff$|\\.jpeg$|\\.jpg$", ignore.case = T, full.names = TRUE)[which.max(file.mtime(list.files(path = tempdir(), pattern = "\\.tiff$|\\.jpeg$|\\.jpg$", ignore.case = T, full.names = TRUE)))]
))
#open pdf
last.pdf <- function() system(paste("xdg-open", list.files(path = tempdir(), pattern = "\\.pdf$", ignore.case = T, full.names = TRUE)[which.max(file.mtime(list.files(path = tempdir(), pattern = "\\.pdf", ignore.case = T, full.names = TRUE)))]
))
#find text in functions
find.text <- function(pattern, fun.only = FALSE, path = "./R", ignore.case = T)
{
rfiles <- list.files(pattern = "\\.R$|\\.Rmd$", path = path, full.names = T, all.files = T)
#check where a word is found in each function an return the name of function where it was found and the time
res <- NULL
w <- 1
for(f in rfiles){
x <- readLines(f)
y <- grep(pattern, x, fixed = T, value = T, ignore.case = ignore.case)
if(length(y)>0 & !fun.only) {
print(gsub(pattern = "\\.R", "", (basename(f))))
for(i in y) print(i)
}
if(length(y)>0 & fun.only) res[w] <- gsub(pattern = "\\.R", "", (basename(f)))
# options(nwarnings = 0)
w = w + 1
}
if(fun.only)
{res <- res[!is.na(res)]
return(res)}
}
#replace text
repl.text <- function(pattern, repl, path = "./R", ignore.case = T){
rfiles <- list.files(pattern = "\\.R$|\\.Rmd", path = path, full.names = T, all.files = T)
for(f in rfiles){
#find and replace
x <- readLines(f)
y <- gsub(pattern, repl, x, fixed = T, ignore.case = ignore.case)
cat(y, file=f, sep="\n")
#reread
x <- readLines(f)
w <- grep(repl, x, fixed = T, value = T, ignore.case = T)
if(length(w)>0) {
print(f)
for(i in w) print(i)
}
}
}
#find functions with specific arguments
find.arg <- function(arg1, arg2 = NULL){
rfiles <- list.files(pattern = "\\.R$", path = "./R", full.names = T, all.files = T)
funs <- gsub(pattern = "\\.R", "", (basename(rfiles)))
funs <-grep("zzz|data|package", funs, invert = T, value = T)
l1 <- unlist(lapply(funs, function(x)
{  a <-  try(run.def.args(x), silent = T)
if(any(grep(arg1, a))) return(x)
}      ))
if(!is.null(arg2))
{l2 <- unlist(lapply(funs, function(x)
{  a <-  try(run.def.args(x), silent = T)
if(any(grep(arg2, a))) return(x)
}      ))
res <- intersect(l1, l2)
} else res <- l1
return(res)
}
# run default arguments
run.def.args2 <-function(FUN)
{
fm <- formals(FUN)
fm <- fm[sapply(fm, length) > 0 | sapply(fm, is.null)]
fm <- lapply(1:length(fm), function(x) paste(names(fm)[x], "=", fm[x]))
for(i in fm) try(eval(parse(text = i)), silent = T)
}
#find functions with specific arguments and text
find.arg.text <- function(arg1, arg2 = NULL, pattern) {
f1 <- find.text(pattern = pattern, fun.only = T)
f2 <- find.arg(arg1 = arg1, arg2 = arg2)
return(intersect(f1, f2))
}
#big data set
big.seltab <- function(X, nrow = 100){
Y <- X[rep(1:nrow(X), ceiling(nrow/nrow(X)))[1:nrow],]
Y$selec <- 1:nrow(Y)
if(is_selection_table(Y) | is_extended_selection_table(Y))
attr(Y, "check.results") <- attr(X, "check.results")[rep(1:nrow(attr(X, "check.results")), ceiling(nrow/nrow(attr(X, "check.results"))))[1:nrow],]
attr(Y, "check.results")$selec <- 1:nrow(Y)
return(Y)
}
# run all fuctions
run.all <- function() invisible(lapply(list.files(pattern = "\\.R", path = "./R", full.names = T, all.files = T), function(x) try(source(x), silent = T)))
run.all()
w <- Phae.long1
w <- readWave("~/opt/Raven-1.5.0.0043/Examples/CanyonWren.wav")
scrolling_spectro(wave = w, wl = 300, ovlp = 30, speed = 1, fps = 20, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = TRUE)
scrolling_spectro(wave = w, wl = 300, ovlp = 30, speed = 1, fps = 20, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE)
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
scrolling_spectro(wave = w, wl = 300, ovlp = 30, speed = 1, fps = 20, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE)
scrolling_spectro(wave = w, wl = 300, ovlp = 30, speed = 1, fps = 20, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE, lcol = "red")
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
scrolling_spectro(wave = w, wl = 300, ovlp = 0, speed = 1, fps = 10, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE, lcol = "red")
scrolling_spectro(wave = w, wl = 300, ovlp = 0, speed = 1, fps = 10, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE, lcol = "red", axis.type = "none")
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
scrolling_spectro(wave = w, wl = 300, ovlp = 0, speed = 1, fps = 10, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE, lcol = "red", axis.type = "none")
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
scrolling_spectro(wave = w, wl = 300, ovlp = 0, speed = 1, fps = 10, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE, lcol = "red", axis.type = "none")
scrolling_spectro(wave = w, wl = 300, ovlp = 0, speed = 1, fps = 10, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE, lcol = "red", axis.type = "none", colbg = "black")
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
scrolling_spectro(wave = w, wl = 300, ovlp = 0, speed = 1, fps = 10, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE, lcol = "red", axis.type = "none", colbg = "black")
scrolling_spectro(wave = w, wl = 300, ovlp = 0, speed = 1, fps = 10, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE, lcol = "red", axis.type = "minimal", colbg = "black")
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
scrolling_spectro(wave = w, wl = 300, ovlp = 0, speed = 1, fps = 10, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE, lcol = "red", axis.type = "minimal", colbg = "black")
c(plt[1] + (plt[2] - plt[1] / 10), plt[1] + (plt[2] - plt[1] / 10) + 1)
# get plotting area coordinates
plt <- par("plt")
c(plt[1] + (plt[2] - plt[1] / 10), plt[1] + (plt[2] - plt[1] / 10) + 1)
c(plt[3] + (plt[4] - plt[3] / 10))
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
scrolling_spectro(wave = w, wl = 300, ovlp = 0, speed = 1, fps = 10, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE, lcol = "red", axis.type = "minimal", colbg = "black")
scrolling_spectro(wave = w, wl = 300, ovlp = 0, speed = 1, fps = 10, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE, lcol = "red", axis.type = "minimal")
scrolling_spectro(wave = w, wl = 300, ovlp = 30, speed = 1, fps = 20, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE)
scrolling_spectro(wave = w, wl = 300, ovlp = 90, speed = 0.5,  fps = 10, t.display = 2, collevels = seq(-40, 0, 5), pal = reverse.heat.colors, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 8), width = 1000, height = 400, res = 120, file.name = "slow.mp4")
w <- readWave("~/opt/Raven-1.5.0.0043/Examples/CanyonWren.wav")
w
object.size(w)
w
# read data Raven
canyon_wren <- readWave("~/opt/Raven-1.5.0.0043/Examples/CanyonWren.wav")
save(canyon_wren, file="./data/canyon_wren.rda", version = 2)
scrolling_spectro(wave = w, wl = 300, ovlp = 30, speed = 1, fps = 20, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 10), width = 1000, height = 800, res = 100, file.name = "normal.mp4", osc = FALSE)
scrolling_spectro(wave = w, wl = 300, ovlp = 30, speed = 1, fps = 40, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 100, file.name = "normal.mp4", osc = FALSE)
scrolling_spectro(wave = w, wl = 300, ovlp = 30, speed = 1, fps = 40, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "normal.mp4", osc = FALSE)
scrolling_spectro(wave = w, wl = 300, ovlp = 30, speed = 1, fps = 40, t.display = 1.7, collevels = seq(-38, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "standard.mp4", osc = FALSE)
scrolling_spectro(wave = w, wl = 300, ovlp = 90, speed = 2, fps = 10, t.display = 2, collevels = seq(-40, 0, 5), pal = viridis, parallel = 3, pb = TRUE, grid = FALSE, flim = c(0, 8), width = 1000, height = 800, res = 120, file.name = "black.mp4", colbg = "black")
scrolling_spectro(wave = w, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "standard.mp4", osc = FALSE)
scrolling_spectro(wave = w, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "black.mp4", colbg = "black")
scrolling_spectro(wave = w, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "yellow.mp4", colbg = "yellow")
scrolling_spectro(wave = w, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "black.mp4", colbg = "black", speed = 0.5)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "standard.mp4")
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "black.mp4", colbg = "black")
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "yellow.mp4", colbg = "yellow")
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "slow.mp4", colbg = "black", speed = 0.5)
data("Cryp.soui")
scrolling_spectro(wave = Cryp.soui, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "fast.mp4", colbg = "black", speed = 2)
scrolling_spectro(wave = Cryp.soui, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 5), width = 1000, height = 500, res = 120, file.name = "fast.mp4", colbg = "black", speed = 2)
scrolling_spectro(wave = Cryp.soui, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 4), width = 1000, height = 500, res = 120, file.name = "fast.mp4", colbg = "black", speed = 2)
scrolling_spectro(wave = Cryp.soui, wl = 600, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 3), width = 1000, height = 500, res = 120, file.name = "fast.mp4", colbg = "black", speed = 2)
Phae.long1
Phae.long2
Phae.long3
Phae.long4
scrolling_spectro(wave = Phae.long4, wl = 300, t.display = 1.7, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1000, height = 500, res = 120, file.name = "no_axis.mp4", colbg = "black", axis.type = "none")
scrolling_spectro(wave = Phae.long4, wl = 300, t.display = 1.7, ovlp = 70, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1000, height = 500, res = 120, collevels = seq(-50, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none")
Phae.long4 <- pastew(Phae.long4, Phae.long4, output = "Wave")
scrolling_spectro(wave = Phae.long4, wl = 300, t.display = 1.7, ovlp = 70, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1000, height = 500, res = 120, collevels = seq(-50, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none")
sil <- silence(duration = 0.3, samp.rate = Phae.long4@samp.rate)
sil <- silence(duration = 0.3, samp.rate = Phae.long4@samp.rate)
Phae.long4@samp.rate
sil <- silence(duration = 0.3, samp.rate = Phae.long4@samp.rate, bit = "16")
sil <- silence(duration = 0.3, samp.rate = Phae.long4@samp.rate, bit = 16)
Phae.long4@samp.rate
sil <- silence(duration = 0.3, samp.rate = 22050, bit = 16)
sil <- silence(duration = 0.3, samp.rate = 22050)
sil
sil <- silence(duration = 0.3, samp.rate = Phae.long4@samp.rate, xunit = "s")
sil
sil <- silence(duration = 0.3, samp.rate = Phae.long4@samp.rate, xunit = "time")
sil
wav2 <- pastew(sil, Phae.long4, output = "Wave")
pastew(wav2, Phae.long4, output = "Wave")
scrolling_spectro(wave = Phae.long4, wl = 300, t.display = 1.7, ovlp = 70, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1000, height = 500, res = 120, collevels = seq(-50, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none")
1000 *2/3
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#sent to github
system("git add .")
system('git commit -m  "add loop and line control to scrolling_spectro()"')
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#sent to github
system("git add .")
system('git commit -m  "readme with videos"')
#sent to github
system("git add .")
system('git commit -m  "readme with videos 2"')
#built site
pkgdown::build_site()
sil <- silence(duration = 0.3, samp.rate = Phae.long4@samp.rate, xunit = "time")
wav2 <- pastew(Phae.long4, sil, output = "Wave")
pastew(wav2, Phae.long4, output = "Wave")
scrolling_spectro(wave = Phae.long4, wl = 300, t.display = 1.7, ovlp = 70, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1000, height = 500, res = 120, collevels = seq(-50, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none")
#built site
pkgdown::build_site()
scrolling_spectro(wave = Cryp.soui, wl = 600, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 2), width = 1000, height = 500, res = 120, file.name = "fast.mp4", colbg = "black", speed = 2)
scrolling_spectro(wave = Cryp.soui, ovlp = 90, wl = 600, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 2), width = 1000, height = 500, res = 120, file.name = "fast.mp4", colbg = "black", speed = 2)
scrolling_spectro(wave = Cryp.soui, ovlp = 90, wl = 600, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1.5, 2), width = 1000, height = 500, res = 120, file.name = "fast.mp4", colbg = "black", speed = 2)
scrolling_spectro(wave = Cryp.soui, ovlp = 90, wl = 600, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1.4, 2.1), width = 1000, height = 500, res = 120, file.name = "fast.mp4", colbg = "black", speed = 2)
#built site
pkgdown::build_site()
#sent to github
system("git add .")
system('git commit -m  "readme with videos 4"')
#built site
pkgdown::build_site()
#sent to github
system("git add .")
system('git commit -m  "readme with videos 5"')
#built site
pkgdown::build_site()
pkgdown::build_site()
#sent to github
system("git add .")
system('git commit -m  "readme with videos 6"')
pkgdown::build_site()
#sent to github
system("git add .")
#sent to github
system("git add .")
system('git commit -m  "readme with videos 7"')
pkgdown::build_site()
#sent to github
system("git add .")
system('git commit -m  "readme with videos 8"')
scrolling_spectro(wave = Phae.long4, wl = 300, t.display = 0.8, ovlp = 70, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1000, height = 500, res = 120, collevels = seq(-50, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none")
scrolling_spectro(wave = Phae.long4, wl = 300, t.display = 0.5, ovlp = 70, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1000, height = 500, res = 120, collevels = seq(-50, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none", speed = 0.33)
scrolling_spectro(wave = Phae.long4, wl = 300, ovlp = 95, t.display = 0.5, ovlp = 70, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1000, height = 333, res = 120, collevels = seq(-50, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none", speed = 0.33)
scrolling_spectro(wave = Phae.long4, wl = 250, t.display = 0.5, ovlp = 95, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1000, height = 333, res = 120, collevels = seq(-40, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none", speed = 0.33)
scrolling_spectro(wave = Phae.long4, wl = 250, t.display = 0.5, ovlp = 95, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1000, height = 333, res = 120, collevels = seq(-40, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none", speed = 0.33, fps = 100)
scrolling_spectro(wave = Phae.long4, wl = 250, t.display = 0.5, ovlp = 95, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1000, height = 333, res = 120, collevels = seq(-40, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none", speed = 0.2, fps =100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 300, res = 120, file.name = "standard.mp4", ovlp = 95, fps = 100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "black.mp4", colbg = "black", ovlp = 95, fps = 100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 500, res = 120, file.name = "slow.mp4", colbg = "black", speed = 0.5, ovlp = 95, fps = 100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 300, res = 200, file.name = "standard.mp4", ovlp = 95, fps = 100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 333, res = 200, file.name = "standard.mp4", ovlp = 95, fps = 100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 333, res = 200, file.name = "black.mp4", colbg = "black", ovlp = 95, fps = 100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1000, height = 333, res = 200, file.name = "slow.mp4", colbg = "black", speed = 0.5, ovlp = 95, fps = 100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1500, height = 500, res = 200, file.name = "standard.mp4", ovlp = 95, fps = 100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1500, height = 500, res = 200, file.name = "black.mp4", colbg = "black", ovlp = 95, fps = 100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1500, height = 500, res = 200, file.name = "slow.mp4", colbg = "black", speed = 0.5, ovlp = 95, fps = 100)
scrolling_spectro(wave = Phae.long4, wl = 250, t.display = 0.5, ovlp = 95, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1500, height = 500, res = 200, collevels = seq(-40, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none", speed = 0.2, fps =100)
# check spelling
spch <- devtools::spell_check(".")
spch$word[grep("dynaSpec", spch$found)]
pkgdown::build_site()
#sent to github
system("git add .")
#sent to github
system("git add .")
system('git commit -m  "readme with videos 9"')
w <- Phae.long1
wave = canyon_wren
wl = 300
t.display = 1.7
pal = viridis
flim = c(1, 9)
width = 1500
height = 500
res = 200
ovlp = 95
fps = 100
# adjust wl based on hope.size
if (is.null(wl))
wl <- round(wave_sil@samp.rate * hop.size / 1000, 0)
# add silence to start and end
wave_sil <- seewave::pastew(wave2 = add_sgm_strt, wave1 = wave, f = wave@samp.rate,
output = "Wave")
wave_sil <- seewave::pastew(wave1 = add_sgm_end, wave2 = wave_sil, f = wave_sil@samp.rate,
output = "Wave")
## create a segment to add at the beggining and end
if (!loop)
add_sgm_end <- add_sgm_strt <- tuneR::silence(duration = t.display / 2, samp.rate = wave@samp.rate,
xunit = "time") else {
add_sgm_strt <- seewave::cutw(wave = wave, from = seewave::duration(wave) - t.display / 2, to = seewave::duration(wave), output = "Wave")
add_sgm_end <- seewave::cutw(wave = wave, from = 0, to = t.display / 2)
}
add_sgm_strt <- seewave::cutw(wave = wave, from = seewave::duration(wave) - t.display / 2, to = seewave::duration(wave), output = "Wave")
add_sgm_end <- seewave::cutw(wave = wave, from = 0, to = t.display / 2)
# add silence to start and end
wave_sil <- seewave::pastew(wave2 = add_sgm_strt, wave1 = wave, f = wave@samp.rate,
output = "Wave")
wave_sil <- seewave::pastew(wave1 = add_sgm_end, wave2 = wave_sil, f = wave_sil@samp.rate,
output = "Wave")
# adjust wl based on hope.size
if (is.null(wl))
wl <- round(wave_sil@samp.rate * hop.size / 1000, 0)
# make wl even if odd
if (!(wl %% 2) == 0) wl <- wl + 1
# make width and height even if odd
if (!(width %% 2) == 0) width <- width + 1
if (!(height %% 2) == 0) height <- height + 1
# number of frames
frames <- round(seewave::duration(wave) * fps, 0)
# time increase between frames
step_time <- (seewave::duration(wave_sil) - t.display) / (frames - 1)
# make vector with name of images
img_names <- paste0(sprintf(paste0("%0",nchar(frames) + 1, "d"), 1:frames), ".temp.img.tiff")
img_names
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1500, height = 500, res = 100, file.name = "standard.mp4", ovlp = 95, fps = 100)
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
# fast
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 600, height = 200, res = 100, file.name = "standard.mp4", ovlp = 5, fps = 20)
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
# fast
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 600, height = 200, res = 100, file.name = "standard.mp4", ovlp = 5, fps = 20)
# fast
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 600, height = 200, res = 100, file.name = "standard.mp4", ovlp = 5, fps = 20, buffer = 0)
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
# fast
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 600, height = 200, res = 100, file.name = "standard.mp4", ovlp = 5, fps = 20, buffer = 1)
buffer
buffer = 1
buffer * fps
frames
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
# fast
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 600, height = 200, res = 100, file.name = "standard.mp4", ovlp = 5, fps = 20, buffer = 1)
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
# fast
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 600, height = 200, res = 100, file.name = "standard.mp4", ovlp = 5, fps = 20, buffer = 1)
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
# fast
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 600, height = 200, res = 100, file.name = "standard.mp4", ovlp = 5, fps = 20, buffer = 1)
# fast
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 600, height = 200, res = 100, file.name = "standard.mp4", ovlp = 5, fps = 20, buffer = 0)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1500, height = 500, res = 100, file.name = "standard.mp4", ovlp = 95, fps = 100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1500, height = 500, res = 200, file.name = "black.mp4", colbg = "black", ovlp = 95, fps = 100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1500, height = 500, res = 200, file.name = "yellow.mp4", colbg = "yellow")
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1500, height = 500, res = 200, file.name = "slow.mp4", colbg = "black", speed = 0.5, ovlp = 95, fps = 100)
scrolling_spectro(wave = Phae.long4, wl = 250, t.display = 0.5, ovlp = 95, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1500, height = 500, res = 200, collevels = seq(-40, 0, 5), file.name = "no_axis.mp4", colbg = "black", axis.type = "none", speed = 0.2, fps =100)
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1500, height = 500, res = 200, file.name = "slow.mp4", colbg = "black", speed = 0.5, ovlp = 95, fps = 100)
source('~/sda5/Dropbox/R_package_testing/dynaSpec/dynaSpec/R/scrolling_spectro.R')
scrolling_spectro(wave = canyon_wren, wl = 300, t.display = 1.7, pal = viridis, parallel = 3, grid = FALSE, flim = c(1, 9), width = 1500, height = 500, res = 200, file.name = "slow.mp4", colbg = "black", speed = 0.5, ovlp = 95, fps = 100)
scrolling_spectro(wave = Phae.long4, wl = 250, t.display = 0.5, ovlp = 95, pal = magma, parallel = 3, grid = FALSE, flim = c(1, 10), width = 1500, height = 500, res = 200, collevels = seq(-40, 0, 5), file.name = "slow_no_axis.mp4", colbg = "black", axis.type = "none", speed = 0.2, fps =100)
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
pkgdown::build_site()
#sent to github
system("git add .")
system('git commit -m  "readme with videos 10"')
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
#sent to github
system("git add .")
pkgdown::build_site()
#sent to github
system("git add .")
system('git commit -m  "readme with videos 11"')
pkgdown::build_site()
#sent to github
system("git add .")
#sent to github
system("git add .")
system('git commit -m  "readme with videos 12"')
#delete NAMESPACE file
unlink("./NAMESPACE")
#run document twice
devtools::document(".")
devtools::document(".")
#check with devtools
devtools::check(".", document = TRUE, run_dont_test = FALSE)
pkgdown::build_site()
#sent to github
system("git add .")
system('git commit -m  "readme with videos 13"')
pkgdown::build_site()
pkgdown::build_site()
#sent to github
system("git add .")
system('git commit -m  "customized pkgdown 2"')
